version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_BASE=/api
        - REACT_APP_API_BASE_URL=http://localhost:80
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks: [appnet]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # Spring datasource (match your Spring config keys)
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      # Optional: make server port explicit
      SERVER_PORT: 8080
    expose:
      - "8080"                 # internal only; proxied by Nginx
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "-c", "exec 3<>/dev/tcp/127.0.0.1/8080"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks: [appnet]

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks: [appnet]

networks:
  appnet:

volumes:
  pgdata: